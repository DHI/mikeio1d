---
title: Res1D
---

[](`~mikeio1d.Res1D`) is the main interface for accessing data on a [Network](network.qmd). Create a Res1D object by providing the path to a supported file type.

## Supported file types

Support is provided for MIKE collection system, water distribution, and river modelling result files. Specific file extensions supported include:

-   MIKE 1D network and catchment res1d files
-   MIKE 1D Long Term Statistics (LTS) res1d files
-   EPANET res, resx, and whr files generated by MIKE+
-   SWMM out files
-   MOUSE legacy prf, crf, and xrf files
-   MIKE 11 res11 files

::: callout-note
All file types use the Res1D object despite their different file extensions. Behind the scenes, they are converted into the common Res1D format.
:::

## Opening files
Network result files can be opened with [](`mikeio1d.open`).
```{python}
import mikeio1d
res = mikeio1d.open('../data/network.res1d')
res
```

Alternatively, you can explicitly create an instance of [](`~mikeio1d.Res1D`):
```{python}
from mikeio1d import Res1D
res = Res1D('../data/network.res1d')
res
```

## Exploring contents
An overview of the file contents can be obtained by calling the [](`~mikeio1d.Res1D.info`) method.
```{python}
res.info()
```
The unique quantity IDs are accessible via the [](`~mikeio1d.Res1D.quantities`) attribute.
```{python}
res.quantities
```
All results share a common time index, which can be accessed via the [](`~mikeio1d.Res1D.quantities`) attribute.
```{python}
res.time_index
```

## Reading all data
All data can be read into a [](`~pandas.DataFrame`) by calling the [](`mikeio1d.Res1D.read`) method.
```{python}
df = res.read()
df.head()
```

## Accessing locations
[Locations](locations.qmd) are where model results exist in the network. The main location types are [nodes](`mikeio1d.result_network.ResultNodes`), [reaches](`mikeio1d.result_network.ResultReaches`), and [catchments](`mikeio1d.result_network.ResultCatchments`).

```{python}
res.reaches
```
```{python}
res.nodes
```
```{python}
res_cat = mikeio1d.open('../data/catchments.res1d')
res_cat.catchments
```

## Modifying data
Limited functionality is provided for modifying result data. A common use case for this is hotstart files. Modifying static network data is not supported. 

```{python}	
# Add 1m to the water level of the node with ID '1'.
df = res.read(column_mode='timeseries')
df_modified = df.copy()
index_to_mod = res.nodes['1'].WaterLevel.timeseries_id
df_modified[index_to_mod] = df_modified[index_to_mod] + 1
res.modify(df_modified, file_path='modified.res1d')
```

::: {.hidden}
```{python .hidden}	
import os
os.remove('modified.res1d')
```
:::

## Examples

- [Res1D Basics](../examples/res1d_basic.qmd)
- [Res1D LTS](../examples/res1d_LTS.qmd)
- [Res1D Export to shapefile](../examples/res1d_export_to_shapefile.qmd)
- [SWMM Basics](../examples/swmm_basic.qmd)
- [EPANET Basics](../examples/epanet_basic.qmd)

::: callout-tip
There are also several notebook examples available on our [GitHub repository]()https://github.com/DHI/mikeio1d/tree/main/notebooks.
:::









